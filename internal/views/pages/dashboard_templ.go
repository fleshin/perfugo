// Code generated by templ - DO NOT EDIT.

// templ: version: v0.2.747
package pages

//lint:file-ignore SA4006 This context is only used if a nested component is present.

import "github.com/a-h/templ"
import templruntime "github.com/a-h/templ/runtime"

import (
	templpkg "github.com/a-h/templ"
	"perfugo/internal/views/components"
	"perfugo/internal/views/layout"
)

func Dashboard() templ.Component {
	return templruntime.GeneratedTemplate(func(templ_7745c5c3_Input templruntime.GeneratedComponentInput) (templ_7745c5c3_Err error) {
		templ_7745c5c3_W, ctx := templ_7745c5c3_Input.Writer, templ_7745c5c3_Input.Context
		templ_7745c5c3_Buffer, templ_7745c5c3_IsBuffer := templruntime.GetBuffer(templ_7745c5c3_W)
		if !templ_7745c5c3_IsBuffer {
			defer func() {
				templ_7745c5c3_BufErr := templruntime.ReleaseBuffer(templ_7745c5c3_Buffer)
				if templ_7745c5c3_Err == nil {
					templ_7745c5c3_Err = templ_7745c5c3_BufErr
				}
			}()
		}
		ctx = templ.InitializeContext(ctx)
		templ_7745c5c3_Var1 := templ.GetChildren(ctx)
		if templ_7745c5c3_Var1 == nil {
			templ_7745c5c3_Var1 = templ.NopComponent
		}
		ctx = templ.ClearChildren(ctx)
		templ_7745c5c3_Err = layout.Layout("Perfugo Dashboard", components.Sidebar(navItems()), dashboardContent(), true).Render(ctx, templ_7745c5c3_Buffer)
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		return templ_7745c5c3_Err
	})
}

func DashboardPartial() templ.Component {
	return templruntime.GeneratedTemplate(func(templ_7745c5c3_Input templruntime.GeneratedComponentInput) (templ_7745c5c3_Err error) {
		templ_7745c5c3_W, ctx := templ_7745c5c3_Input.Writer, templ_7745c5c3_Input.Context
		templ_7745c5c3_Buffer, templ_7745c5c3_IsBuffer := templruntime.GetBuffer(templ_7745c5c3_W)
		if !templ_7745c5c3_IsBuffer {
			defer func() {
				templ_7745c5c3_BufErr := templruntime.ReleaseBuffer(templ_7745c5c3_Buffer)
				if templ_7745c5c3_Err == nil {
					templ_7745c5c3_Err = templ_7745c5c3_BufErr
				}
			}()
		}
		ctx = templ.InitializeContext(ctx)
		templ_7745c5c3_Var2 := templ.GetChildren(ctx)
		if templ_7745c5c3_Var2 == nil {
			templ_7745c5c3_Var2 = templ.NopComponent
		}
		ctx = templ.ClearChildren(ctx)
		templ_7745c5c3_Err = dashboardContent().Render(ctx, templ_7745c5c3_Buffer)
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		return templ_7745c5c3_Err
	})
}

func navItems() []components.NavItem {
	return []components.NavItem{
		{Label: "Dashboard", Icon: "ðŸ“Š", Path: "/app", Active: true},
		{Label: "Batches", Icon: "ðŸ§ª", Path: "/batches"},
		{Label: "Inventory", Icon: "ðŸ“¦", Path: "/inventory"},
		{Label: "Quality", Icon: "ðŸ§¬", Path: "/quality"},
		{Label: "Reports", Icon: "ðŸ“‘", Path: "/reports"},
	}
}

func activityEntries() []components.ActivityEntry {
	return []components.ActivityEntry{
		{Name: "Batch 8724", Reference: "MR-2024-09", Quantity: "1,200 L", Progress: "72", ProgressStyle: "72%", UpdatedAt: "2h ago", Status: "In Progress"},
		{Name: "Batch 8725", Reference: "MR-2024-10", Quantity: "980 L", Progress: "54", ProgressStyle: "54%", UpdatedAt: "4h ago", Status: "On Hold"},
		{Name: "Batch 8719", Reference: "MR-2024-04", Quantity: "1,450 L", Progress: "100", ProgressStyle: "100%", UpdatedAt: "1d ago", Status: "Completed"},
	}
}

func kpiCards() []templpkg.Component {
	return []templpkg.Component{
		components.StatCard("Active Batches", "48", "+12%", "vs. last month"),
		components.StatCard("Quality Checks", "96.4%", "+2.1%", "pass rate this week"),
		components.StatCard("Inventory Turns", "5.4", "+0.8", "rolling 30 days"),
	}
}

func dashboardContent() templ.Component {
	return templruntime.GeneratedTemplate(func(templ_7745c5c3_Input templruntime.GeneratedComponentInput) (templ_7745c5c3_Err error) {
		templ_7745c5c3_W, ctx := templ_7745c5c3_Input.Writer, templ_7745c5c3_Input.Context
		templ_7745c5c3_Buffer, templ_7745c5c3_IsBuffer := templruntime.GetBuffer(templ_7745c5c3_W)
		if !templ_7745c5c3_IsBuffer {
			defer func() {
				templ_7745c5c3_BufErr := templruntime.ReleaseBuffer(templ_7745c5c3_Buffer)
				if templ_7745c5c3_Err == nil {
					templ_7745c5c3_Err = templ_7745c5c3_BufErr
				}
			}()
		}
		ctx = templ.InitializeContext(ctx)
		templ_7745c5c3_Var3 := templ.GetChildren(ctx)
		if templ_7745c5c3_Var3 == nil {
			templ_7745c5c3_Var3 = templ.NopComponent
		}
		ctx = templ.ClearChildren(ctx)
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString("<div class=\"mx-auto flex min-h-screen w-full max-w-7xl flex-col gap-6 px-4 py-6 sm:px-6 lg:px-8\">")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = components.Header("Manufacturing Overview", "Monitor production, quality, and inventory health in real time.").Render(ctx, templ_7745c5c3_Buffer)
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString("<div class=\"grid gap-6 lg:grid-cols-3\">")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		for _, card := range kpiCards() {
			templ_7745c5c3_Err = card.Render(ctx, templ_7745c5c3_Buffer)
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
		}
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString("</div><div class=\"grid gap-6 lg:grid-cols-5\"><section class=\"lg:col-span-3 space-y-4\"><header class=\"flex items-center justify-between\"><div><h2 class=\"text-lg font-semibold text-slate-900\">Batch Progress</h2><p class=\"text-sm text-slate-500\">Key active batches and their current status.</p></div><button class=\"text-sm font-medium text-indigo-600 hover:text-indigo-500\">View all</button></header>")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = components.ActivityTable(activityEntries()).Render(ctx, templ_7745c5c3_Buffer)
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString("</section><aside class=\"space-y-4 lg:col-span-2\"><div class=\"rounded-2xl border border-slate-200 bg-white p-6 shadow-sm\"><h3 class=\"text-base font-semibold text-slate-900\">Quality Highlights</h3><ul class=\"mt-4 space-y-3 text-sm text-slate-600\"><li class=\"flex items-start gap-3\"><span class=\"mt-1 inline-flex h-2 w-2 flex-shrink-0 rounded-full bg-emerald-500\"></span> 98% of critical control points within tolerance.</li><li class=\"flex items-start gap-3\"><span class=\"mt-1 inline-flex h-2 w-2 flex-shrink-0 rounded-full bg-amber-400\"></span> 3 batches flagged for review due to temperature variance.</li><li class=\"flex items-start gap-3\"><span class=\"mt-1 inline-flex h-2 w-2 flex-shrink-0 rounded-full bg-sky-400\"></span> Trending stability improvements on release testing.</li></ul></div><div class=\"rounded-2xl border border-indigo-100 bg-indigo-50 p-6 text-indigo-900 shadow-sm\"><h3 class=\"text-base font-semibold\">Automation Insight</h3><p class=\"mt-3 text-sm leading-6 text-indigo-900/80\">Automated scheduling reduced manual interventions by 24% this quarter. Continue optimizing equipment changeovers to unlock more efficiency.</p><button class=\"mt-4 inline-flex items-center gap-2 text-sm font-semibold text-indigo-600 hover:text-indigo-500\">Review playbook <svg class=\"h-4 w-4\" viewBox=\"0 0 20 20\" fill=\"currentColor\" aria-hidden=\"true\"><path fill-rule=\"evenodd\" d=\"M5.22 14.78a.75.75 0 0 1 0-1.06L11.94 7H6.75a.75.75 0 0 1 0-1.5h6.5a.75.75 0 0 1 .75.75v6.5a.75.75 0 0 1-1.5 0V8.06l-6.72 6.72a.75.75 0 0 1-1.06 0Z\" clip-rule=\"evenodd\"></path></svg></button></div></aside></div></div>")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		return templ_7745c5c3_Err
	})
}
